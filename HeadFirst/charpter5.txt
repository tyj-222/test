单例模式：一个类只有一个实例，并提供一个全局访问点。

总结：1，单例模式确保程序中一个类最多只有一个实例。
      2，单例模式也提供访问这个实例的全局点。
      3，在java中实现单例模式需要私有的构造器，一个静态方法和一个静态变量。
      4，确定在性能和资源上的限制，然后小心的选择合适的方案来实现单例，以解决多线程的问题。
      5，如果不是采用第五版的java 2，双重检查加锁实现会失效。
      6，如果使用多个类加载器，可能导致单例失效而产生多个实例。
      7，如果使用JVM 1.2或之前的版本，你必须建立单例注册表，以免垃圾收集器将单例回收。



命令模式：请求分装成对象，这可以让你使用不同的请求，队列或者日志请求来参数化其他对象。命令模式也可以支持撤销操作。
      1，命令模式将发出请求的对象和执行请求的对象解耦。
      2，在被解耦的两者之间是通过命令对象进行沟通的。命令对象分装了接受者和一个或一组动作。
      3，调用者通过调用命令对象的execute（）发出请求，这会使得接收者的动作被调用。
      4，命令可以支持撤销，做法是实现一个undo（）方法来回到execute（）被执行前的状态。
      5，宏命令是命令的一种简单的延伸，允许调用多个命令。宏方法也可以支持撤销。
      6，实际操作时，很常见使用“聪明”命令对象，也就是直接实现了请求，而不是将工作委托给接收者。
      7，命令也可以用来实现日志和事务系统。
