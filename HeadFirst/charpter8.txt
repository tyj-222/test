设计原则8（单一责任原则）：一个类应该只有一个引起变化的原因。

迭代器模式：提供一种方法顺序访问一个聚合对象中的各个元素，而又不暴露其内部的表示。

组合模式：允许你将对象组成树形结构来表现“整体/部分”的层次结构。组合能让客户以一致的方式处理个别对象和对象组合。

总结：1，迭代器允许访问聚合的元素，而不需要暴露它的内部结构。
      2，迭代器将遍历聚合的工作分装进一个对象中。
      3，当使用迭代器的时候，我们依赖聚合提供遍历。
      4，迭代器提供了一个通用的接口，让我们遍历聚合的项，当我们编码使用聚合的项时，就可以使用多态机制。
      5，我们应该努力让一个类只分配一个责任。
      6，组合模式提供一个结构，可同时包容个别对象和组合对象。
      7，组合模式允许客户对别对象及组合对象一视同仁。
      8，组合结构内的任意对象称为组件，组件可以使组合，也可以是叶节点。
      9，在实现组合模式时，有许多设计上的折衷，你要根据需要平衡透明性和安全性。
